{"version":3,"sources":["components/ClickArea/index.jsx","services/api.js","pages/home/requests.js","shared/columnsQueries.js","pages/home/FilterButton.jsx","components/PokemonsContainer/index.jsx","pages/home/home.jsx","pages/pokemon/requests.js","pages/pokemon/index.jsx","pages/saved/index.jsx","routes.js","App.js","serviceWorker.js","index.js"],"names":["ClickArea","props","id","api","axios","create","baseURL","PAGE_SIZE","fetchPokemonSearch","search","page","a","get","params","offset","limit","response","results","data","searchResults","filter","result","name","includes","toLowerCase","length","size","pokemons","i","begin","url","pokemonResponse","pokemonData","push","img_url","sprites","front_default","fetchTypePokemonList","type","pokemons_data","pokemon_list","map","item","fetchTypePokemons","fetchPokemons","pokemonsQueries","columns","query","filterQueries","FilterButton","href","className","PokemonsContainer","queries","pokemon","index","to","centered","title","key","src","alt","Home","history","match","useState","setPage","setPokemons","searchInput","setSearchInput","filterOpen","setFilterOpen","strictSearch","setStrictSearch","setLimit","isOk","setIsOk","changePage","p","renderPageButton","isPrevious","pageLimit","Math","ceil","console","log","onClick","useEffect","loadPokemons","top","between","lg","md","placeholder","onChange","e","target","value","checked","label","onSelect","fetchEvolution","getEvolutionChain","evolves_to","evolution_chain","chain","fetchEvolutionPokemons","evolution_pokemons","fetchSpecie","entrie","flavor_text","evolution","fetchPokemon","status","types","abilities","ability","stats","speed","special_defense","special_attack","defense","attack","hp","specie","front_sprite","back_sprite","Pokemon","setPokemon","pokemonSaved","setPokemonSaved","localStorage","getItem","loadPokemon","removeItem","saved_list_json","savedList","JSON","parse","setItem","stringify","sm","max","success","error","warning","primary","around","Saved","savedPokemonsJson","_pokemons","pokemonJson","Routes","path","exact","component","App","sprite","rounded","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b9fb5cdd.chunk.js","sourcesContent":["import React from 'react'\nimport './ClickArea.css';\n\nimport PropTypes from 'prop-types'\n\nconst ClickArea = props => <button id='click-area' {...props}></button>\n\nClickArea.propTypes = {\n    onClick: PropTypes.func,\n}\n\nexport default ClickArea\n\n","import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n  baseURL: \"https://pokeapi.co/api/v2/\"\r\n});\r\n\r\nexport default api;","import api from '../../services/api';\n\nconst PAGE_SIZE = 20;\n\nasync function fetchPokemonSearch(search, page) {\n  const response = await api.get('/pokemon', {\n    params: { offset: 0, limit: 964, },\n  });\n \n  const results = response.data.results;\n  const searchResults = results.filter((result) => result.name.includes(search.toLowerCase()));\n\n  if (searchResults.length == 0)\n    return {\n      size: 0,\n      pokemons: 0,\n    }\n\n  const pokemons = [];\n  const begin = page * PAGE_SIZE;\n  for (let i = begin; i < (begin + PAGE_SIZE) && i < searchResults.length; i++) {\n    \n    const pokemonResponse = await api.get(searchResults[i].url);\n    const pokemonData = pokemonResponse.data;\n    pokemons.push({\n      id: pokemonData.id,\n      name: pokemonData.name,\n      img_url: pokemonData.sprites.front_default,\n    });\n  }\n  \n  return {\n    size: searchResults.length,\n    pokemons,\n  };\n}\n\nasync function fetchTypePokemonList(type, page) {\n  const response = await api.get(`/type/${type}`);\n  const pokemons_data = response.data['pokemon'];\n\n  const pokemon_list = pokemons_data.map((item) => item['pokemon']['name']);\n\n  return pokemon_list;\n}\n\nasync function fetchTypePokemons(type, page) {\n  const pokemon_list = await fetchTypePokemonList(type);\n  const pokemons = [];\n  const begin = page * PAGE_SIZE + 1;\n  for (let i = begin; i < begin + PAGE_SIZE; i++) {\n    const response = await api.get(`/pokemon/${pokemon_list[i]}`);\n    const data = response.data;\n    pokemons.push({\n      id: i,\n      name: data['name'],\n      img_url: data['sprites']['front_default'],\n    });\n  }\n\n\n  return {\n    size: pokemon_list.length,\n    pokemons,\n  };\n}\n\nasync function fetchPokemons(page) {\n  const pokemons = [];\n  const begin = page * PAGE_SIZE + 1;\n  for (let i = begin; i < begin + PAGE_SIZE; i++) {\n    const response = await api.get(`/pokemon/${i}`);\n    const data = response.data;\n    pokemons.push({\n      id: data['id'],\n      name: data['name'],\n      img_url: data['sprites']['front_default'],\n    });\n  }\n\n  return pokemons;\n}\n\nexport { fetchTypePokemons, fetchPokemons, fetchPokemonSearch };","export const pokemonsQueries = [\r\n  {\r\n    columns: 2,\r\n    query: 'min-width: 512px',\r\n  },\r\n  {\r\n    columns: 3,\r\n    query: 'min-width: 768px',\r\n  },\r\n  {\r\n    columns: 4,\r\n    query: 'min-width: 1024px',\r\n  },\r\n];\r\n\r\nexport const filterQueries = [\r\n  {\r\n    columns: 2,\r\n    query: 'min-width: 512px',\r\n  },\r\n  {\r\n    columns: 4,\r\n    query: 'min-width: 768px',\r\n  },\r\n  {\r\n    columns: 6,\r\n    query: 'min-width: 1024px',\r\n  },\r\n];\r\n","import React from 'react';\nimport { Button } from 'nes-react';\n\nimport './style.css';\nconst FilterButton = props => (\n\t<a href={`/type/${props.filter}`}>\n\t\t<Button className=\"filter-button\">{props.filter}</Button>\n\t</a>\n);\n\nexport default FilterButton;\n","import React from 'react';\nimport { Container } from 'nes-react';\nimport Columns from 'react-columns';\nimport { Link } from 'react-router-dom';\n\nimport { pokemonsQueries } from '../../shared/columnsQueries';\n\nimport './style.css';\nimport '../../shared/style.css';\n\nconst PokemonsContainer = ({ pokemons }) =>\n\tpokemons.length > 0 ? (\n\t\t<div className=\"pokemons-container\">\n\t\t\t<Columns queries={pokemonsQueries}>\n\t\t\t\t{pokemons.map((pokemon, index) => (\n\t\t\t\t\t<Link to={`/pokemon/${pokemon.name}`} className=\"link-pokemon\">\n\t\t\t\t\t\t<Container centered title={pokemon.name} key={index} className=\"pokemon-card\">\n\t\t\t\t\t\t\t{ pokemon.img_url ? <img src={pokemon.img_url} alt={`Front of ${pokemon.name}`} /> : <p>No picture</p>}\n\t\t\t\t\t\t</Container>\n\t\t\t\t\t</Link>\n\t\t\t\t))}\n\t\t\t</Columns>\n\t\t</div>\n\t) : (\n\t\t<h2>Loading...</h2>\n\t);\nexport default PokemonsContainer;\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport './style.css';\r\nimport '../../shared/style.css';\r\nimport Columns from 'react-columns';\r\nimport { Row, Col } from 'react-flexbox-grid';\r\nimport { TextInput, Button, Container, Checkbox } from 'nes-react';\r\n\r\nimport ClickArea from '../../components/ClickArea';\r\nimport { fetchPokemons, fetchTypePokemons, fetchPokemonSearch } from './requests';\r\nimport { filterQueries } from '../../shared/columnsQueries';\r\nimport FilterButton from './FilterButton';\r\nimport PokemonsContainer from '../../components/PokemonsContainer';\r\n\r\nconst PAGE_SIZE = 20;\r\n\r\nconst Home = ({ history, match }) => {\r\n  const [page, setPage] = useState(0);\r\n  const [pokemons, setPokemons] = useState([]);\r\n  const [searchInput, setSearchInput] = useState('');\r\n  const [filterOpen, setFilterOpen] = useState(false);\r\n  const [strictSearch, setStrictSearch] = useState(true);\r\n  const [limit, setLimit] = useState(0);\r\n  const [isOk, setIsOk] = useState(true);\r\n\r\n  const { type, search } = match.params;\r\n\r\n  const typeList = [\r\n    'normal',\r\n    'fire',\r\n    'water',\r\n    'electric',\r\n    'grass',\r\n    'ice',\r\n    'fighting',\r\n    'poison',\r\n    'ground',\r\n    'flying',\r\n    'psychic',\r\n    'bug',\r\n    'rock',\r\n    'ghost',\r\n    'dragon',\r\n    'dark',\r\n    'steel',\r\n    'fairy',\r\n  ];\r\n\r\n  useEffect(() => {\r\n    async function loadPokemons() {\r\n      if (type) {\r\n        const result = await fetchTypePokemons(type, page);\r\n        setLimit(result.size);\r\n        setPokemons(result.pokemons);\r\n      } else if (search) {\r\n        const result = await fetchPokemonSearch(search, page);\r\n        setLimit(result.size);\r\n        setPokemons(result.pokemons);\r\n        if (pokemons.length == 0) setIsOk(false);\r\n      } else {\r\n        setLimit(807);\r\n        setPokemons(await fetchPokemons(page));\r\n      }\r\n    }\r\n\r\n    loadPokemons();\r\n  }, [page]);\r\n\r\n  function changePage(p) {\r\n    setPokemons([]);\r\n    setPage(p);\r\n  }\r\n\r\n  function renderPageButton(isPrevious) {\r\n    const pageLimit = Math.ceil(limit / PAGE_SIZE);\r\n    console.log(limit, pageLimit);\r\n    if (isPrevious) {\r\n      return page === 0 ? (\r\n        <></>\r\n      ) : (\r\n          <ClickArea onClick={() => changePage(page - 1)}>\r\n            <Button> {'<'} </Button>\r\n          </ClickArea>\r\n        );\r\n    } else\r\n      return page + 1 === pageLimit ? (\r\n        <></>\r\n      ) : (\r\n          <ClickArea onClick={() => changePage(page + 1)}>\r\n            <Button> {'>'} </Button>\r\n          </ClickArea>\r\n        );\r\n  }\r\n\r\n  const handleInput = e => setSearchInput(e.target.value);\r\n  const handleSaved = () => history.push(`/saved/`);\r\n  const openFilters = () => setFilterOpen(!filterOpen);\r\n\r\n  return (\r\n    <>\r\n      <Row top=\"sm\" between=\"lg\" className=\"top\">\r\n        <Col lg={5} md={12}>\r\n          <TextInput placeholder=\"Search for a pokémon\" onChange={handleInput} />\r\n          <Checkbox\r\n            checked={strictSearch}\r\n            label=\"Strict search\"\r\n            onSelect={() => setStrictSearch(!strictSearch)}\r\n          />\r\n        </Col>\r\n        <Col lg={1} md={12}>\r\n          <a href={strictSearch ? `/pokemon/${searchInput}` : `/search/${searchInput}`}>\r\n            <Button>Search!</Button>\r\n          </a>\r\n        </Col>\r\n        <Col lg={1} />\r\n        <Col>\r\n          <ClickArea onClick={openFilters}>\r\n            <Button>Filter</Button>\r\n          </ClickArea>\r\n        </Col>\r\n        <Col>\r\n          <ClickArea onClick={handleSaved}>\r\n            <Button>Favorites</Button>\r\n          </ClickArea>\r\n        </Col>\r\n      </Row>\r\n\r\n      {filterOpen ? (\r\n        <Container title=\"Select a type\">\r\n          <Columns queries={filterQueries}>\r\n            {typeList.map(type => (\r\n              <FilterButton filter={type} />\r\n            ))}\r\n          </Columns>\r\n        </Container>\r\n      ) : (\r\n          <></>\r\n        )}\r\n\r\n      <div className=\"subtitle\">\r\n        {type ? (\r\n          <h2>\r\n            Showing <b>{type}</b> pokemons\r\n\t\t\t\t\t</h2>\r\n        ) : search ? (\r\n          <h2>\r\n            Showing results for <b>\"{search}\"</b>\r\n          </h2>\r\n        ) : (\r\n              <h2>\r\n                Showing <b>all</b> pokemons\r\n\t\t\t\t\t</h2>\r\n            )}\r\n      </div>\r\n\r\n      {isOk ? (\r\n        <>\r\n          <PokemonsContainer pokemons={pokemons} />\r\n          <div className=\"row\">\r\n            {renderPageButton(true)}\r\n            {page + 1}\r\n            {renderPageButton(false)}\r\n          </div>{' '}\r\n        </>\r\n      ) : (\r\n          <p>No results</p>\r\n        )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import api from '../../services/api';\n\nasync function fetchEvolution(url) {\n    const response = await api.get(url);\n    const chain = response.data['chain'];\n    const evolution_chain = [];\n\n    evolution_chain.push(chain['species']['name']);\n\n    function getEvolutionChain(evolves_to) {\n        if (evolves_to[0]['evolves_to'].length == 0) {\n            evolution_chain.push(evolves_to[0][\"species\"][\"name\"]);\n            return;\n        };\n\n        evolution_chain.push(evolves_to[0][\"species\"][\"name\"]);\n        getEvolutionChain(evolves_to[0]['evolves_to']);\n    }\n\n    if (chain.evolves_to.length > 0) getEvolutionChain(chain.evolves_to);\n    return evolution_chain;\n}\n\nasync function fetchEvolutionPokemons(url) {\n    const evolution_chain = await fetchEvolution(url);\n    console.log(evolution_chain);\n    const evolution_pokemons = [];\n    for (const i in evolution_chain) {\n        const response = await api.get(`/pokemon/${evolution_chain[i]}`);\n        const data = response.data;\n        evolution_pokemons.push({\n            id: data['id'],\n            name: data['name'],\n            img_url: data['sprites']['front_default'],\n        });\n    }\n\n\n    return evolution_pokemons;\n}\n\nasync function fetchSpecie(name) {\n    const response = await api.get(`/pokemon-species/${name}/`);\n    const data = response.data;\n\n    let flavor_text;\n    for (let i in data['flavor_text_entries']) {\n        const entrie = data['flavor_text_entries'][i]\n        if (entrie['language']['name'] == 'en') {\n            flavor_text = entrie['flavor_text'];\n            break;\n        }\n    }\n\n    const evolution = await fetchEvolutionPokemons(data['evolution_chain']['url']);\n\n    return { flavor_text, evolution };\n}\n\n\nexport default async function fetchPokemon(id) {\n    let response;\n    try {\n        response = await api.get(`/pokemon/${id}/`);\n    } catch (e) {\n        return { status: 'ERROR' };\n    }\n    const data = response.data;\n\n\n    const types = data['types'].map(type => type['type']);\n    const abilities = data['abilities'].map(ability => ability['ability']);\n    const stats = {\n        speed: data['stats'][0]['base_stat'],\n        special_defense: data['stats'][1]['base_stat'],\n        special_attack: data['stats'][2]['base_stat'],\n        defense: data['stats'][3]['base_stat'],\n        attack: data['stats'][4]['base_stat'],\n        hp: data['stats'][5]['base_stat'],\n    };\n\n    const specie = await fetchSpecie(data['species']['name']);\n\n    return {\n        status: 'OK',\n        id: data['id'],\n        name: data['name'],\n        front_sprite: data['sprites']['front_default'],\n        back_sprite: data['sprites']['back_default'],\n        abilities,\n        types,\n        stats,\n        flavor_text: specie.flavor_text,\n        evolution: specie.evolution,\n    }\n} ","import React, { useState, useEffect } from 'react';\nimport { Container, Progress, Button } from 'nes-react';\nimport { Row, Col } from 'react-flexbox-grid';\n\nimport fetchPokemon from './requests';\nimport './style.css';\nimport '../../shared/style.css';\nimport ClickArea from '../../components/ClickArea';\n\nconst Pokemon = props => {\n\tconst { id } = props.match.params;\n\tconst [pokemon, setPokemon] = useState({\n\t\tid: 0,\n\t\tname: '',\n\t\tfront_sprite: '',\n\t\tback_sprite: '',\n\t\tabilities: [{}],\n\t\ttypes: [{}],\n\t\tstats: {},\n\t\tflavor_text: '',\n\t\tevolution: [],\n\t});\n\tconst [pokemonSaved, setPokemonSaved] = useState(false);\n\n\tuseEffect(() => {\n\t\tasync function loadPokemon() {\n\t\t\tconst pokemon = await fetchPokemon(id);\n\t\t\tsetPokemon(pokemon);\n\t\t\tsetPokemonSaved(localStorage.getItem(pokemon.name));\n\t\t}\n\t\tloadPokemon();\n\t}, []);\n\n\tconst savePokemon = () => {\n\t\tlocalStorage.setItem(\n\t\t\tpokemon.name,\n\t\t\tJSON.stringify({ id: pokemon.id, name: pokemon.name, img_url: pokemon.front_sprite })\n\t\t);\n\t\tsetPokemonSaved(true);\n\t\tconst saved_list_json = localStorage.getItem('saved_list');\n\t\tlet savedList = JSON.parse(saved_list_json);\n\t\tif (!savedList) savedList = [];\n\t\tsavedList.push(pokemon.name);\n\t\tlocalStorage.setItem('saved_list', JSON.stringify(savedList));\n\t};\n\n\tconst removePokemon = () => {\n\t\tlocalStorage.removeItem(pokemon.name);\n\t\tsetPokemonSaved(false);\n\t\tconst saved_list_json = localStorage.getItem('saved_list');\n\t\tlet savedList = JSON.parse(saved_list_json);\n\t\tif (savedList) {\n\t\t\tsavedList = savedList.filter(e => e != pokemon.name);\n\t\t\tlocalStorage.setItem('saved_list', JSON.stringify(savedList));\n\t\t}\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t{pokemon.status == 'ERROR' ? (\n\t\t\t\t<p>No results or something gone wrong :( </p>\n\t\t\t) : pokemon.id > 0 ? (\n\t\t\t\t<div>\n\t\t\t\t\t<Row between=\"md\">\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<h1>\n\t\t\t\t\t\t\t\t#{pokemon.id} {pokemon.name}\n\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t</Col>\n\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t{pokemonSaved ? (\n\t\t\t\t\t\t\t\t<ClickArea onClick={removePokemon}>\n\t\t\t\t\t\t\t\t\t<Button>Unfavorite</Button>\n\t\t\t\t\t\t\t\t</ClickArea>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<ClickArea onClick={savePokemon}>\n\t\t\t\t\t\t\t\t\t<Button>Favorite</Button>\n\t\t\t\t\t\t\t\t</ClickArea>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<p>{pokemon.flavor_text}</p>\n\t\t\t\t\t<Row top=\"lg\">\n\t\t\t\t\t\t<Col lg={4} md={12} sm={12}>\n\t\t\t\t\t\t\t{pokemon.front_sprite ? (\n\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\talt={`Front of ${pokemon.name}`}\n\t\t\t\t\t\t\t\t\tsrc={pokemon.front_sprite}\n\t\t\t\t\t\t\t\t\tclassName=\"pokemon-img\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<></>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{pokemon.back_sprite ? (\n\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\talt={`Back of ${pokemon.name}`}\n\t\t\t\t\t\t\t\t\tsrc={pokemon.back_sprite}\n\t\t\t\t\t\t\t\t\tclassName=\"pokemon-img\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<></>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t<Container title=\"Types\" className=\"poke-container\">\n\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t{pokemon.types.map(type => (\n\t\t\t\t\t\t\t\t\t\t<li>{type.name}</li>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t</Container>\n\n\t\t\t\t\t\t\t<Container title=\"Abilities\" className=\"poke-container\">\n\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t{pokemon.abilities.map(ability => (\n\t\t\t\t\t\t\t\t\t\t<li>{ability.name}</li>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t</Container>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col lg={8} md={12} sm={12}>\n\t\t\t\t\t\t\t<Container title=\"Stats\">\n\t\t\t\t\t\t\t\tHP {pokemon.stats.hp}\n\t\t\t\t\t\t\t\t<Progress value={pokemon.stats.hp} max={255} success />\n\t\t\t\t\t\t\t\tAttack {pokemon.stats.attack}\n\t\t\t\t\t\t\t\t<Progress value={pokemon.stats.attack} max={190} error />\n\t\t\t\t\t\t\t\tDefense {pokemon.stats.defense}\n\t\t\t\t\t\t\t\t<Progress value={pokemon.stats.defense} max={230} warning />\n\t\t\t\t\t\t\t\tSpecial Attack {pokemon.stats.special_attack}\n\t\t\t\t\t\t\t\t<Progress value={pokemon.stats.special_attack} max={194} error />\n\t\t\t\t\t\t\t\tSpecial Defense {pokemon.stats.special_defense}\n\t\t\t\t\t\t\t\t<Progress value={pokemon.stats.special_defense} max={230} warning />\n\t\t\t\t\t\t\t\tSpeed {pokemon.stats.speed}\n\t\t\t\t\t\t\t\t<Progress value={pokemon.stats.speed} max={180} primary />\n\t\t\t\t\t\t\t</Container>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t{pokemon.evolution.length > 1 ? (\n\t\t\t\t\t\t<Container title=\"Evolution\" className=\"evolution-container\">\n\t\t\t\t\t\t\t<Row around=\"lg\">\n\t\t\t\t\t\t\t\t{pokemon.evolution.map((p, index) => (\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t{index > 0 ? <Col>=></Col> : <></>}\n\t\t\t\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t\t\t\t<a href={`/pokemon/${p.name}`} className=\"link-pokemon\">\n\t\t\t\t\t\t\t\t\t\t\t\t<img src={p.img_url} />\n\t\t\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t\t\t{p.name}\n\t\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t</Container>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<></>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<h1>Loading...</h1>\n\t\t\t)}\n\t\t</>\n\t);\n};\n\nexport default Pokemon;\n","import React, {useEffect,useState} from 'react'\nimport { Link } from 'react-router-dom';\nimport Columns from 'react-columns';\nimport { Container } from 'nes-react';\n\nimport '../../shared/style.css';\nimport { pokemonsQueries } from '../../shared/columnsQueries';\nimport PokemonsContainer from '../../components/PokemonsContainer';\n\nconst Saved = () => {\n    const [pokemons,setPokemons] = useState([]);\n\n    useEffect(() => {\n        const savedPokemonsJson = localStorage.getItem('saved_list');\n        const savedPokemons = JSON.parse(savedPokemonsJson);\n        const _pokemons = savedPokemons.map(pokemon => {\n            const pokemonJson = localStorage.getItem(pokemon);\n            return JSON.parse(pokemonJson);\n        });\n        setPokemons(_pokemons);\n    }, []);\n\n    return (\n        <div>\n            <h1>Your favorites pokémons</h1>\n            <PokemonsContainer pokemons={pokemons}/>\n        </div>\n    )\n}\n\nexport default Saved;\n","import React from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport Home from './pages/home/home'\r\nimport Pokemon from './pages/pokemon/index';\r\nimport Saved from './pages/saved/index';\r\n\r\nexport default Routes => {\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Home} />\r\n        <Route path=\"/type/:type\" component={Home} />\r\n        <Route path=\"/search/:search\" component={Home} />\r\n        <Route path=\"/pokemon/:id\" component={Pokemon} />\r\n        <Route path=\"/saved/\" component={Saved} />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}","import React from 'react';\nimport './App.css';\nimport { Container, Sprite, Icon } from 'nes-react';\nimport Routes from './routes';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <a className=\"title\" href='/'>\n        <Sprite sprite=\"pokeball\" className=\"pokeball\" />\n        <h1>Pokeman</h1>\n      </a>\n\n      <Container rounded className=\"content\">\n        <Routes />\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}